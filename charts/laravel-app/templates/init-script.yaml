{{- if .Values.statamic.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "laravel-app.fullname" . }}-init-script
  labels:
    {{- include "laravel-app.labels" . | nindent 4 }}
data:
  init.sh: |-
    #!/bin/bash

    declare -A links=(
        ["/data/git/content/"]="/var/www/html/content"
        ["/data/git/users/"]="/var/www/html/users"
        ["/data/git/resources/blueprints/"]="/var/www/html/resources/blueprints"
        ["/data/git/resources/fieldsets/"]="/var/www/html/resources/fieldsets"
        ["/data/git/resources/forms/"]="/var/www/html/resources/forms"
        ["/data/git/resources/users/"]="/var/www/html/resources/users"
        ["/data/git/resources/preferences.yaml"]="/var/www/html/resources/preferences.yaml"
        ["/data/git/storage/forms/"]="/var/www/html/storage/forms"
    )

    # Loop through the associative array and create the symbolic links
    for source in "${!links[@]}"; do
        destination=${links[$source]}
        if [ -e "$source" ]; then  # Check if the source exists
            if [ -e "$destination" ] && [ ! -L "$destination" ]; then  # Check if the destination exists and is not a symlink
                echo "Destination $destination already exists and is not a symlink. Attempting to remove."
                rm -rf "$destination"  # Remove the destination directory
                if [ $? -eq 0 ]; then  # Check if the removal was successful
                    echo "Removed existing destination $destination."
                else
                    echo "Failed to remove existing destination $destination. Check permissions."
                    continue  # Skip to the next iteration if removal failed
                fi
            fi

            # Attempt to create the symlink after ensuring the destination is clear
            if ln -s "$source" "$destination"; then
                echo "Linked $source to $destination"
            else
                echo "Failed to link $source to $destination. Check permissions and source existence."
            fi
        else
            echo "Source $source does not exist. Skipping."
        fi
    done
{{- end }}
