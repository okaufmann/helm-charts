apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laravel-app.fullname" . }}-webapp
  labels:
    {{- include "laravel-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: webapp
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap-envs.yaml") . | sha256sum }}
    checksum/meilisearch-key: {{ include (print $.Template.BasePath "/meilisearch-masterkey-secret.yaml") . | sha256sum }}
spec:
  {{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "laravel-app.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.app.strategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.app.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "laravel-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: webapp
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "laravel-app.serviceAccountName" . }}
      {{- end }}

      volumes:
      - name: runtime-cache
        emptyDir:
          sizeLimit: 1Mi
      {{- if .Values.statamic.enabled }}
      - name: data
        emptyDir: {}
      - name: www-data
        emptyDir: {}
      - name: statamic
        persistentVolumeClaim:
          claimName: {{ include "laravel-app.fullname" . }}-statamic-pvc
      - name: init-script
        configMap:
          defaultMode: 448
          name: {{ include "laravel-app.fullname" . }}-init-script
      {{- end }}
      {{- with .Values.app.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}

      initContainers:
        - name: init
          args:
            - /bin/bash
            - -c
          {{- if .Values.statamic.enabled }}
            - /app/init.sh
          {{- else }}
            - php artisan optimize && php artisan view:cache
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          volumeMounts:
          - name: runtime-cache
            mountPath: /var/www/html/bootstrap/cache
          {{- if .Values.statamic.enabled }}
          - name: statamic
            mountPath: /data/git
          - name: init-script
            mountPath: /app/init.sh
            subPath: init.sh
            readOnly: true
          - name: data
            mountPath: /data
          - name: www-data
            mountPath: /var/www/html
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "laravel-app.fullname" . }}-config
          {{- if and .Values.meilisearch.enabled .Values.meiliMasterKey }}
          env:
          - name: MEILISEARCH_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.meiliMasterKeySecretName }}
                key: MEILI_MASTER_KEY
          {{- end }}
        - name: migrate
          args:
            - /bin/bash
            - -c
            - php artisan migrate --force
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "Always" }}
          volumeMounts:
          - name: runtime-cache
            mountPath: /var/www/html/bootstrap/cache
          {{- if .Values.statamic.enabled }}
          - name: statamic
            mountPath: /data/git
          - name: data
            mountPath: /data
          - name: www-data
            mountPath: /var/www/html
          {{- end }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          volumeMounts:
          - name: runtime-cache
            mountPath: /var/www/html/bootstrap/cache
          {{- if .Values.statamic.enabled }}
          - name: statamic
            mountPath: /data/git
          - name: data
            mountPath: /data
          - name: www-data
            mountPath: /var/www/html
          {{- end }}
          {{- with .Values.app.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.app.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.app.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.app.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}

